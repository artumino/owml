using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;

namespace OWML.ModLoader
{
	public static class UnityPreloader
	{
        private static readonly string[] CriticalAssemblies =
        {
            "Mono.Cecil.dll",
            "Mono.Cecil.Mdb.dll",
            "Mono.Cecil.Pdb.dll",
            "Mono.Cecil.Rocks.dll",
            "0Harmony.dll"
        };

        private static void LoadCriticalAssemblies()
        {
            using (TextWriter tw = File.CreateText("load_critical_assemblies.txt"))
            {
                tw.WriteLine($"Hello! This text file was generated by Doorstop on {DateTime.Now:R}!");
                tw.WriteLine($"Command line: {Environment.CommandLine}");
                tw.Flush();
            }

            foreach (var criticalAssembly in CriticalAssemblies)
            {
                try
                {
                    Assembly.LoadFile(Path.Combine(@"E:\Steam\steamapps\common\Outer Wilds\OuterWilds_Data\Managed\", criticalAssembly));
                }
                catch (Exception)
                {
                    // Suppress error for now
                    // TODO: Should we crash here if load fails? Can't use logging at this point
                }
            }
        }

        public static void Preload()
		{
            using (TextWriter tw = File.CreateText("Preload.txt"))
            {
                tw.WriteLine($"Hello! This text file was generated by Doorstop on {DateTime.Now:R}!");
                tw.WriteLine($"Command line: {Environment.CommandLine}");
                tw.Flush();
            }

            LoadCriticalAssemblies();

            TemporaryPatcher.TempPatch();
		}
	}
}
